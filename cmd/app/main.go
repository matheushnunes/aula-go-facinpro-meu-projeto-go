// Arquivo principal do programa (entrypoint) ü´°
// Conven√ß√£o de mercado: colocar em cmd/<nome-app>/main.go
package main

// Importa os pacotes necess√°rios
import (
	"fmt"
	"meu-projeto-go/internal/anamnese"
	"meu-projeto-go/internal/fibonacci"
	"meu-projeto-go/internal/hello"
	"meu-projeto-go/internal/saudacao"
)

// Fun√ß√£o principal do programa
func main() {
	// Mensagem inicial da aplica√ß√£o
	fmt.Println("üöÄ Meu primeiro projeto em Go com estrutura de mercado!")

	// Chamada para fun√ß√£o de sauda√ß√£o
	hello.SayHello()
	fmt.Println("-----------------------------")

	// Demonstra√ß√£o: c√°lculo do 10¬∫ n√∫mero de Fibonacci
	n := 10
	// Chama a fun√ß√£o Fibonacci do pacote fibonacci
	// fibonacci // importado acima
	// Fibonacci(n) // retorna o n-√©simo n√∫mero da sequ√™ncia
	// := √© usado para declarar e inicializar a vari√°vel
	valor := fibonacci.Fibonacci(n)
	// Imprime o resultado com formata√ß√£o
	fmt.Printf("F(%d) = %d\n", n, valor)

	// Demonstra√ß√£o: imprimir a sequ√™ncia completa at√© n
	fibonacci.PrintSequence(n)

	fmt.Println("-----------------------------")
	anamnese.Anamnese()

	fmt.Println("\n\n-----------------------------")
	fmt.Println("Sauda√ß√£o:")

	mensagem := saudacao.Saudacao("Flora")
	fmt.Printf(mensagem)

	fmt.Println("\n\n-----------------------------")
	fmt.Println("Fun√ß√£o an√¥nima:")
	soma := func (n1, n2 int) int {
		return	n1 + n2
	}
	n1 := 2
	n2 := 3
	fmt.Printf("A soma de %v + %v = %v", n1, n2, soma(n1, n2))
}
